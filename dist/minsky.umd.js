!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.minksy={})}(this,function(e){"use strict";const t=0,s=void 0;const i=function(){return this.val===t?this.on_empty!==s?this.on_empty.updateNode():s:(this.val-=1,this.updateRegister(),this.on_decrement!==s?this.on_decrement.updateNode():s)},n=function(){return this.val+=1,this.updateRegister(),this.on_increment!==s?this.on_increment.updateNode():s},r=function(){this.registers[this.register]=this.val},o=function(){return void 0===this.val&&(this.val=this.registers[this.register]),this};class h{constructor({val:e,register:s,on_decrement:n,on_empty:h}={}){if(e<t)throw new Error(`val must be greater than or equal to ${t}`);this.register=s,this.registers=void 0,this.val=e,this.on_decrement=n,this.func=i,this.on_empty=h,this.updateRegister=r,this.updateNode=o}}class d{constructor({val:e,register:s,on_increment:i}={}){if(e<t)throw new Error(`val in PlusNode must be greater than or equal to ${t}`);this.register=s,this.registers=void 0,this.val=e,this.on_increment=i,this.func=n,this.updateRegister=r,this.updateNode=o}}e.empty=t,e.halt_node=s,e.RegisterMachine=class{constructor(e){this.nodes=e||{},this.registers={},this.initNodes()}initNodes(){for(let e in this.nodes){let t=this.nodes[e];if(t.registers=this.registers,t instanceof d)t.on_increment!==s&&this.checkNode(t.on_increment),t.on_increment=this.nodes[t.on_increment];else{if(!(t instanceof h))throw new Error(`invalid node type: ${t.constructor.name}`);t.on_decrement!==s&&(this.checkNode(t.on_decrement),t.on_decrement=this.nodes[t.on_decrement]),t.on_empty!==s&&(this.checkNode(t.on_empty),t.on_empty=this.nodes[t.on_empty])}}this.start=this.nodes.start}checkNode(e){if(!this.nodes.hasOwnProperty(e))throw new Error(`register machine does not have node named: ${e}`)}run(){this.start.updateRegister();let e=this.start.func();for(;e!==s;)e=e.func()}},e.MinusNode=h,e.PlusNode=d,Object.defineProperty(e,"__esModule",{value:!0})});
