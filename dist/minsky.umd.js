!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e.minksy={})}(this,function(e){"use strict";const t=0,s=void 0;const n=function(){return this.val===t?this.on_empty!==s?this.on_empty.updateNode():s:(this.val-=1,this.updateRegister(),this.on_decrement!==s?this.on_decrement.updateNode():s)},r=function(){return this.val+=1,this.updateRegister(),this.on_increment!==s?this.on_increment.updateNode():s},i=function(){this.registers[this.register]=this.val},o=function(){return void 0===this.val&&(this.val=this.registers[this.register]),this};e.empty=t,e.halt_node=s,e.RegisterMachine=class{constructor(e,t){this.nodes=e||{},this.registers=t||{};for(let e in this.nodes){let t=this.nodes[e];if(t.registers=this.registers,t.on_increment===s){if(t.on_decrement!==s){if(!this.nodes.hasOwnProperty(t.on_decrement))throw new Error(`register machine does not have node named: ${t.on_decrement}`);t.on_decrement=this.nodes[t.on_decrement]}if(t.on_empty!==s){if(!this.nodes.hasOwnProperty(t.on_empty))throw new Error(`register machine does not have node named: ${t.on_empty}`);t.on_empty=this.nodes[t.on_empty]}}else{if(!this.nodes.hasOwnProperty(t.on_increment))throw new Error(`register machine does not have node named: ${t.on_increment}`);t.on_increment=this.nodes[t.on_increment]}}this.start=this.nodes.start}clearRegisters(){this.registers={}}clearNodes(){this.nodes=[]}run(){this.start.updateRegister();let e=this.start.func();for(;e!==s;)e=e.func()}},e.MinusNode=class{constructor({val:e,register:s,on_decrement:r,on_empty:h}={}){if(e<t)throw new Error(`val must be greater than or equal to ${t}`);this.register=s,this.registers=void 0,this.val=e,this.on_decrement=r,this.func=n,this.on_empty=h,this.updateRegister=i,this.updateNode=o}isPlusNode(){return!1}isMinusNode(){return!0}},e.PlusNode=class{constructor({val:e,register:s,on_increment:n}={}){if(e<t)throw new Error(`val in PlusNode must be greater than or equal to ${t}`);this.register=s,this.registers=void 0,this.val=e,this.on_increment=n,this.func=r,this.updateRegister=i,this.updateNode=o}isPlusNode(){return!0}isMinusNode(){return!1}},Object.defineProperty(e,"__esModule",{value:!0})});
